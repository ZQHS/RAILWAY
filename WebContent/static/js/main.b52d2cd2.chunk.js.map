{"version":3,"sources":["components/Navbar.js","components/button/DeleteRailway.js","components/button/EditRailway.js","components/RailwayData.js","components/button/AddRailway.js","components/RailwayList.js","components/button/AddPlan.js","components/button/EditPlan.js","components/button/DeletePlan.js","components/button/EditCoordinate.js","components/PlanData.js","components/request/GetRailways.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","margin","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","SearchAppBar","classes","className","AppBar","style","Toolbar","to","IconButton","edge","aria-label","fontSize","Typography","variant","noWrap","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","noValidate","validated","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","action","Group","controlId","Label","name","Control","type","required","pattern","Feedback","value","onClick","onHide","DeleteRailway","React","useState","modalShow","setModalShow","show","setValidated","InputGroup","Prepend","Text","defaultValue","railway","railway_name","grade","speed","lines","track","min_radius","slope","railway_id","EditRailway","table","minWidth","RailwayData","rows","railways","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","textDecoration","as","Row","column","sm","Col","placeholder","AddRailway","document","documentElement","clientHeight","demo","background","paper","RailwayList","List","ListItem","ListItemText","ListItemSecondaryAction","Fab","AddPlan","EditPlan","plan","plan_name","lenght","tunnel","bridge","plan_id","DeletePlan","line_id","PlanData","setPlan","setRow","addPlanModal","setAddPlanModal","editPlanModal","setEditPlanModal","deletePlanModal","setDeletePlanModal","useEffect","a","axios","result","data","fetchPlan","columns","field","detailPanel","tooltip","render","rowData","Grid","container","direction","item","xs","coordinate","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeDasharray","stroke","fillOpacity","fill","EditCoordinate","actions","icon","isFreeAction","disabled","birthYear","options","actionsColumnIndex","GetRailways","match","setRailways","fetchRailways","params","ModalSwitch","exact","path","App","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b52d2cd2.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: (0, \"auto\"),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200,\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar style={{ position: \"static\" }}>\n        <Toolbar>\n          <Link to=\"/\">\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              aria-label=\"home\"\n            >\n              <HomeIcon fontSize=\"large\" style={{ color: \"white\" }} />\n            </IconButton>\n          </Link>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            铁路选线\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction MyVerticallyCenteredModal(props) {\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          noValidate\n          validated=\"ture\"\n          onSubmit={handleSubmit}\n          action=\"http://localhost:8080/RAILWAY/RailwayServlet\"\n        >\n          <Form.Group controlId=\"formDeleteRailway\">\n            <Form.Label>\n              你确定要删除“\n              {props.name}\n              ”吗？\n            </Form.Label>\n            <Form.Control type=\"text\" name=\"confirm\" required pattern=\"我确定\" />\n            <Form.Control.Feedback type=\"invalid\">请输入“我确定”以完成删除</Form.Control.Feedback>\n          </Form.Group>\n          <input type=\"hidden\" name=\"method\" value=\"deleteRailway\" />\n          <input type=\"hidden\" name=\"railway_id\" value={props.id} />\n          <input className=\"btn btn-large btn-primary btn-block\" type=\"submit\" value=\"删除\" />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction DeleteRailway(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <DeleteIcon variant=\"primary\" onClick={() => setModalShow(true)} />\n\n      <MyVerticallyCenteredModal\n        name={props.name}\n        id={props.id}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\nexport default DeleteRailway;\n","import React, { useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction MyVerticallyCenteredModal(props) {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n          action=\"http://localhost:8080/RAILWAY/RailwayServlet\"\n        >\n          <Form.Group controlId=\"edit_railway_name\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"railway_name_Prepend\">线路名</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"railway_name\"\n                defaultValue={props.railway.railway_name}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">线路名不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_grade\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"grade_Prepend\">铁路等级</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\" name=\"grade\" defaultValue={props.railway.grade} required />\n              <Form.Control.Feedback type=\"invalid\">铁路等级不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_speed\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"speed_Prepend\">设计速度（km/h）</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\" name=\"speed\" defaultValue={props.railway.speed} required />\n              <Form.Control.Feedback type=\"invalid\">设计速度不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_lines\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"lines_Prepend\">正线数目（条）</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\" name=\"lines\" defaultValue={props.railway.lines} required />\n              <Form.Control.Feedback type=\"invalid\">正线数目不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_track\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"track_Prepend\">到发线有效长度（m）</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\" name=\"track\" defaultValue={props.railway.track} required />\n              <Form.Control.Feedback type=\"invalid\">到发线有效长度不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_min_radius\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"min_radius_Prepend\">最小曲线半径（m）</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"min_radius\"\n                defaultValue={props.railway.min_radius}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">最小曲线半径不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_slope\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"slope_Prepend\">限制坡度（‰）</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\" name=\"slope\" defaultValue={props.railway.slope} required />\n              <Form.Control.Feedback type=\"invalid\">限制坡度不能为空</Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <input type=\"hidden\" name=\"method\" value=\"editRailway\" />\n          <input type=\"hidden\" name=\"railway_id\" value={props.railway.railway_id} />\n          <input className=\"btn btn-large btn-primary btn-block\" type=\"submit\" value=\"修改\" />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction EditRailway(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <EditIcon variant=\"primary\" onClick={() => setModalShow(true)} />\n\n      <MyVerticallyCenteredModal\n        railway={props.railway}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\nexport default EditRailway;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteRailway from './button/DeleteRailway';\nimport EditRailway from './button/EditRailway';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function RailwayData(props) {\n  const classes = useStyles();\n  const rows = props.railways;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>线路名</TableCell>\n            <TableCell align=\"right\">铁路等级</TableCell>\n            <TableCell align=\"right\">设计速度（km/h）</TableCell>\n            <TableCell align=\"right\">正线数目（条）</TableCell>\n            <TableCell align=\"right\">到发线有效长度（m）</TableCell>\n            <TableCell align=\"right\">最小曲线半径（m）</TableCell>\n            <TableCell align=\"right\">限制坡度（‰）</TableCell>\n            <TableCell align=\"right\">修改/删除</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.railway_id}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link\n                  to={`/${row.railway_id}`}\n                  style={{\n                    textDecoration: 'none',\n                    color: 'black',\n                  }}\n                >\n                  {row.railway_name}\n                </Link>\n              </TableCell>\n              <TableCell align=\"right\">{row.grade}</TableCell>\n              <TableCell align=\"right\">{row.speed}</TableCell>\n              <TableCell align=\"right\">{row.lines}</TableCell>\n              <TableCell align=\"right\">{row.track}</TableCell>\n              <TableCell align=\"right\">{row.min_radius}</TableCell>\n              <TableCell align=\"right\">{row.slope}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <EditRailway railway={row} />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <DeleteRailway name={row.railway_name} id={row.railway_id} />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction MyVerticallyCenteredModal(props) {\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form action=\"http://localhost:8080/RAILWAY/RailwayServlet\">\n          <Form.Group as={Row} controlId=\"form_railway_name\">\n            <Form.Label column sm=\"2\">\n              线路名\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"railway_name\" placeholder=\"请输入线路名\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_grade\">\n            <Form.Label column sm=\"2\">\n              铁路等级\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"grade\" placeholder=\"请输入铁路等级\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_speed\">\n            <Form.Label column sm=\"2\">\n              设计速度\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"speed\" placeholder=\"请输入设计速度\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_lines\">\n            <Form.Label column sm=\"2\">\n              正线数目\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"lines\" placeholder=\"请输入正线数目\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_track\">\n            <Form.Label column sm=\"2\">\n              到发线长度\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"track\" placeholder=\"请输入到发线有效长度\" required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_min_radius\">\n            <Form.Label column sm=\"2\">\n              最小曲线半径\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                name=\"min_radius\"\n                placeholder=\"请输入最小曲线半径\"\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"form_slope\">\n            <Form.Label column sm=\"2\">\n              限制坡度\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control type=\"text\" name=\"slope\" placeholder=\"请输入限制坡度\" required />\n            </Col>\n          </Form.Group>\n          <input type=\"hidden\" name=\"method\" value=\"insertRailway\" />\n          <input className=\"btn btn-large btn-primary btn-block\" type=\"submit\" value=\"添加\" />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction AddRailway() {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <AddIcon variant=\"primary\" onClick={() => setModalShow(true)} />\n\n      <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} />\n    </>\n  );\n}\n\nexport default AddRailway;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { Fab } from '@material-ui/core';\nimport RailwayData from './RailwayData';\nimport AddRailway from './button/AddRailway';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: (0, 'auto'),\n    backgroundColor: 'white',\n    height: document.documentElement.clientHeight - 64,\n  },\n\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  title: {\n    margin: theme.spacing(0, 1, 1),\n  },\n}));\n\nexport default function RailwayList(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        <ListItem>\n          <ListItemText>\n            <Typography align=\"center\" variant=\"h5\" className={classes.title}>\n              现有线路\n            </Typography>\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <Fab color=\"primary\" edge=\"end\" aria-label=\"edit\" size=\"small\">\n              <AddRailway />\n            </Fab>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n      <div className={classes.demo}>\n        <RailwayData railways={props.railways} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction AddPlan(props) {\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form action=\"http://localhost:8080/RAILWAY/RailwayServlet\">\n          <Form.Group as={Row} controlId=\"form_plan_name\">\n            <Form.Label column sm=\"3\">\n              方案名\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control type=\"text\" name=\"plan_name\" placeholder=\"请输入方案名\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"form_lenght\">\n            <Form.Label column sm=\"3\">\n              铁路长度（m）\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control type=\"text\" name=\"lenght\" placeholder=\"请输入铁路长度\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"form_tunnel\">\n            <Form.Label column sm=\"3\">\n              隧道长度（m）\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control type=\"text\" name=\"tunnel\" placeholder=\"请输入隧道长度\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"form_bridge\">\n            <Form.Label column sm=\"3\">\n              桥梁长度（m）\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control type=\"text\" name=\"bridge\" placeholder=\"请输入桥梁长度\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"form_height\">\n            <Form.Label column sm=\"3\">\n              爬升高度（m）\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control type=\"text\" name=\"height\" placeholder=\"请输入爬升高度\" required />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"form_coordinate\">\n            <Form.Label column sm=\"3\">\n              纵断面坐标\n            </Form.Label>\n            <Col sm=\"9\">\n              <Form.Control as=\"textarea\" rows=\"10\" name=\"coordinate\" required />\n            </Col>\n          </Form.Group>\n\n          <input type=\"hidden\" name=\"method\" value=\"insertPlan\" />\n          <input type=\"hidden\" name=\"railway_id\" value={props.id} />\n          <input className=\"btn btn-large btn-primary btn-block\" type=\"submit\" value=\"添加\" />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddPlan;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nfunction EditPlan(props) {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n          action=\"http://localhost:8080/RAILWAY/RailwayServlet\"\n        >\n          <Form.Group controlId=\"edit_plan_name\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"railway_name_Prepend\">\n                  方案名\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"plan_name\"\n                defaultValue={props.plan.plan_name}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                方案名不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_lenght\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"lenght_Prepend\">\n                  铁路长度（m）\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"lenght\"\n                defaultValue={props.plan.lenght}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                铁路长度不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_tunnel\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"tunnel_Prepend\">\n                  隧道长度（m）\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"tunnel\"\n                defaultValue={props.plan.tunnel}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                隧道长度不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_bridge\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"bridge_Prepend\">\n                  桥梁长度（m）\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"bridge\"\n                defaultValue={props.plan.bridge}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                桥梁长度不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group controlId=\"edit_height\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"height_Prepend\">\n                  爬升高度（m）\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                name=\"height\"\n                defaultValue={props.plan.height}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                爬升高度不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <input type=\"hidden\" name=\"method\" value=\"editPlan\" />\n          <input type=\"hidden\" name=\"plan_id\" value={props.plan.plan_id} />\n          <input type=\"hidden\" name=\"railway_id\" value={props.id} />\n          <input\n            className=\"btn btn-large btn-primary btn-block\"\n            type=\"submit\"\n            value=\"修改\"\n          />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditPlan;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\n\nfunction DeletePlan(props) {\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">添加线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          noValidate\n          validated=\"ture\"\n          onSubmit={handleSubmit}\n          action=\"http://localhost:8080/RAILWAY/RailwayServlet\"\n        >\n          <Form.Group controlId=\"formDeleteRailway\">\n            <Form.Label>\n              你确定要删除“\n              {props.plan.plan_name}\n              ”吗？\n            </Form.Label>\n            <Form.Control type=\"text\" name=\"confirm\" required pattern=\"我确定\" />\n            <Form.Control.Feedback type=\"invalid\">请输入“我确定”以完成删除</Form.Control.Feedback>\n          </Form.Group>\n          <input type=\"hidden\" name=\"method\" value=\"deletePlan\" />\n          <input type=\"hidden\" name=\"railway_id\" value={props.id} />\n          <input type=\"hidden\" name=\"plan_id\" value={props.plan.plan_id} />\n          <input type=\"hidden\" name=\"line_id\" value={props.plan.line_id} />\n          <input className=\"btn btn-large btn-primary btn-block\" type=\"submit\" value=\"删除\" />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default DeletePlan;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction MyVerticallyCenteredModal(props) {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">修改线路</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n          action=\"http://localhost:8080/RAILWAY/RailwayServlet\"\n        >\n          <Form.Group controlId=\"edit_coordinate\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"height_Prepend\">\n                  纵断面坐标\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"10\"\n                name=\"coordinate\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                纵断面坐标不能为空\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <input type=\"hidden\" name=\"method\" value=\"editCoordinate\" />\n          <input type=\"hidden\" name=\"plan_id\" value={props.plan.plan_id} />\n          <input type=\"hidden\" name=\"railway_id\" value={props.id} />\n          <input type=\"hidden\" name=\"tunnel\" value={props.plan.tunnel} />\n          <input type=\"hidden\" name=\"bridge\" value={props.plan.bridge} />\n          <input\n            className=\"btn btn-large btn-primary btn-block\"\n            type=\"submit\"\n            value=\"修改\"\n          />\n          <input\n            className=\"btn btn-large btn-secondary btn-block\"\n            type=\"button\"\n            value=\"取消\"\n            onClick={props.onHide}\n          />\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction EditPlan(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <EditIcon variant=\"primary\" onClick={() => setModalShow(true)} />\n\n      <MyVerticallyCenteredModal\n        id={props.id}\n        plan={props.plan}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\nexport default EditPlan;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport MaterialTable from \"material-table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPlan from \"./button/AddPlan\";\nimport EditPlan from \"./button/EditPlan\";\nimport DeletePlan from \"./button/DeletePlan\";\nimport EditCoordinate from \"./button/EditCoordinate\";\n\nfunction PlanData(props) {\n  const [plan, setPlan] = useState([]);\n  const [row, setRow] = useState([]);\n  const [addPlanModal, setAddPlanModal] = React.useState(false);\n  const [editPlanModal, setEditPlanModal] = React.useState(false);\n  const [deletePlanModal, setDeletePlanModal] = React.useState(false);\n\n  useEffect(() => {\n    const fetchPlan = async () => {\n      const result = await axios(\n        `RAILWAY/RailwayServlet?method=searchPlan&railway_id=${props.id}`\n      );\n      setPlan(result.data);\n    };\n    fetchPlan();\n  }, [props.id]);\n\n  return (\n    <>\n      <MaterialTable\n        title=\"方案列表\"\n        columns={[\n          { title: \"方案\", field: \"plan_name\" },\n          { title: \"铁路长度(m)\", field: \"lenght\" },\n          { title: \"隧道长度(m)\", field: \"tunnel\" },\n          { title: \"桥梁长度(m)\", field: \"bridge\" },\n          { title: \"爬升高度(m)\", field: \"height\" },\n          { title: \"填挖方(m³)\", field: \"earthwork\" },\n          { title: \"成本(万元)\", field: \"cost\" },\n        ]}\n        data={plan}\n        detailPanel={[\n          {\n            tooltip: \"Show Elevation\",\n            render: (rowData) => (\n              <>\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={11}>\n                    <AreaChart\n                      width={1200}\n                      height={250}\n                      data={rowData.coordinate}\n                      margin={{\n                        top: 10,\n                        right: 30,\n                        left: 0,\n                        bottom: 0,\n                      }}\n                    >\n                      <defs>\n                        <linearGradient\n                          id=\"colorUv\"\n                          x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n                            offset=\"5%\"\n                            stopColor=\"#8884d8\"\n                            stopOpacity={0.8}\n                          />\n                          <stop\n                            offset=\"95%\"\n                            stopColor=\"#8884d8\"\n                            stopOpacity={0}\n                          />\n                        </linearGradient>\n                        <linearGradient\n                          id=\"colorPv\"\n                          x1=\"0\"\n                          y1=\"0\"\n                          x2=\"0\"\n                          y2=\"1\"\n                        >\n                          <stop\n                            offset=\"5%\"\n                            stopColor=\"#82ca9d\"\n                            stopOpacity={0.8}\n                          />\n                          <stop\n                            offset=\"95%\"\n                            stopColor=\"#82ca9d\"\n                            stopOpacity={0}\n                          />\n                        </linearGradient>\n                      </defs>\n                      <XAxis dataKey=\"x\" />\n                      <YAxis />\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <Tooltip />\n                      <Area\n                        type=\"monotone\"\n                        dataKey=\"y_ground\"\n                        stroke=\"#8884d8\"\n                        fillOpacity={1}\n                        fill=\"url(#colorUv)\"\n                      />\n                      <Area\n                        type=\"monotone\"\n                        dataKey=\"y_design\"\n                        stroke=\"#82ca9d\"\n                        fillOpacity={1}\n                        fill=\"url(#colorPv)\"\n                      />\n                    </AreaChart>\n                  </Grid>\n                  <Grid item xs={1}>\n                    <IconButton edge=\"end\" aria-label=\"edit\">\n                      <EditCoordinate id={props.id} plan={rowData} />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n              </>\n            ),\n          },\n        ]}\n        actions={[\n          {\n            icon: \"add\",\n            tooltip: \"Add Plan\",\n            isFreeAction: true,\n            onClick: (event) => setAddPlanModal(true),\n          },\n          {\n            icon: \"edit\",\n            tooltip: \"Edit Plan\",\n            onClick: (event, rowData) => {\n              setEditPlanModal(true);\n              setRow(rowData);\n            },\n          },\n          (rowData) => ({\n            icon: \"delete\",\n            tooltip: \"Delete Plan\",\n            onClick: (event, rowData) => {\n              setDeletePlanModal(true);\n              setRow(rowData);\n            },\n            disabled: rowData.birthYear < 2000,\n          }),\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n      />\n      <AddPlan\n        id={props.id}\n        show={addPlanModal}\n        onHide={() => setAddPlanModal(false)}\n      />\n      <EditPlan\n        id={props.id}\n        plan={row}\n        show={editPlanModal}\n        onHide={() => setEditPlanModal(false)}\n      />\n      <DeletePlan\n        id={props.id}\n        plan={row}\n        show={deletePlanModal}\n        onHide={() => setDeletePlanModal(false)}\n      />\n    </>\n  );\n}\n\nexport default PlanData;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport RailwayList from \"../RailwayList\";\nimport PlanData from \"../PlanData\";\n\nfunction GetRailways({ match }) {\n  const [railways, setRailways] = useState([]);\n\n  useEffect(() => {\n    const fetchRailways = async () => {\n      const result = await axios(\"RailwayServlet?method=searchRailway\");\n      setRailways(result.data);\n    };\n    fetchRailways();\n  }, []);\n\n  if (match.params.id) {\n    return <PlanData id={match.params.id} />;\n  }\n\n  return <RailwayList railways={railways} />;\n}\n\nexport default GetRailways;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport GetRailways from \"./components/request/GetRailways\";\n\nimport \"./App.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 0,\n  },\n});\n\nfunction ModalSwitch() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={GetRailways} />\n        <Route path=\"/:id\" component={GetRailways} />\n      </Switch>\n    </div>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <Navbar />\n        <Route component={ModalSwitch} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}